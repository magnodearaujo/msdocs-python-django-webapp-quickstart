name: test_pipeline
on: [push]

# Bloqueia o main de receber commits diretos e forÃ§a PR
# Colocar Validacoes no BASH -> Terraform

env:
  TF_VAR_APP_NAME: ${{env.APP_NAME}}
  TF_VAR_FOLDER_NAME: '.'
  TF_VAR_ARM_ACCESS_KEY: ${{secrets.ARM_ACCESS_KEY}}
  TF_VAR_SKU_TYPE: ${{env.SKU_TYPE}}
  TF_VAR_REGION: ${{env.REGION}}
  TF_PYTHON_VERSION: ${{env.PYTHON_VERSION}}
  
jobs: 
  teste:
    runs-on: ubuntu-latest
    steps:
      - name: repo checkout
        uses: actions/checkout@v4
      - name: python setup
        uses: actions/setup-python@v1
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: azure login
        uses: azure/login@v1
        with: 
          creds: '${{secrets.azure_credentials}}'
      - name: pip install
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
      - name: HashiCorp - Setup Terraform      
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform run
        working-directory: './terraform'
        run: |
          terraform init
          terraform plan
          terraform apply
        
      - name: deploy webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{env.APP_NAME}}
          package: ${{env.FOLDER_NAME}}
          startup-command: 'python manage.py runserver'
          resource-group-name: ${{vars.RESOURCE_GROUP}}
      

