name: test_pipeline
on: [push]

# Bloqueia o main de receber commits diretos e forÃ§a PR
# Colocar Validacoes no BASH -> Terraform

env:

  FOLDER_NAME: '.'
  # Secrets:
  ARM_ACCESS_KEY: ${{secrets.ARM_ACCESS_KEY}}
  # Terraform:
  APP_NAME: 'dumbapp-sample'
  SKU_TYPE: 'F1'
  REGION: 'westeurope'
  PYTHON_VERSION: '3.9'
  
jobs: 
  teste:
    runs-on: ubuntu-20.04
    steps:
      - name: repo checkout
        uses: actions/checkout@v4
      - name: python setup
        uses: actions/setup-python@v1
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: azure login
        uses: azure/login@v1
        with: 
          creds: '${{secrets.azure_credentials}}'
      - name: pip install
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
      - name: HashiCorp - Setup Terraform      
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        working-directory: './terraform'
        run: |
          terraform init

      - name: Terraform Plan
        working-directory: './terraform'
        run: |
          terraform plan -lock=false    
        env:
          TF_VAR_PYTHON_VERSION: ${{env.PYTHON_VERSION}}
          TF_VAR_SKU_NAME: ${{env.SKU_NAME}}
          TF_VAR_REGION: ${{env.REGION}}
          PYTHON_VERSION: ${{env.PYTHON_VERSION}}

      - name: Terraform Apply
        working-directory: './terraform'
        run: |
          terraform apply
        env:
          TF_VAR_PYTHON_VERSION: ${{env.PYTHON_VERSION}}
          TF_VAR_SKU_NAME: ${{env.SKU_NAME}}
          TF_VAR_REGION: ${{env.REGION}}
          PYTHON_VERSION: ${{env.PYTHON_VERSION}}

      - name: deploy webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{env.APP_NAME}}
          package: ${{env.FOLDER_NAME}}
          startup-command: 'python manage.py runserver'
          resource-group-name: ${{vars.RESOURCE_GROUP}}
      

